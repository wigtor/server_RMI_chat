/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package server_rmi_chat;

import RMI.conexionRMIServidor;
import RMI_funciones.interfazServidorImpl;
import java.rmi.RemoteException;
import java.rmi.registry.Registry;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author victor
 */
public class Server_window extends javax.swing.JFrame {

    private conexionRMIServidor conexion = null;
    interfazServidorImpl serverLocal = null;
    
    /**
     * Creates new form Server_window
     */
    public Server_window() {
        //Intento dar tema visual de windows
        try { 
            UIManager.setLookAndFeel(
		"com.sun.java.swing.plaf.windows.WindowsLookAndFeel"
            );
            
        }
        catch ( Exception e ) {
            
            //Intento dar tema visual para gtk en linux
            try { 
                UIManager.setLookAndFeel(
                    "com.sun.java.swing.plaf.gtk.GTKLookAndFeel"
                );            
            }
            catch (Exception e2) {
                JOptionPane.showMessageDialog(this, 
                "Imposible modificar el tema visual", "WindowsLookandfeel inv&aacute;lido.",
                JOptionPane.ERROR_MESSAGE);
                
            }
        }
        initComponents();
        this.btn_iniciar.setEnabled(true);
        this.btn_detener.setEnabled(false);
        this.lb_estado.setText(conexionRMIServidor.desconectado);
        this.lb_numUsuarios.setText("0");
        
        try {
            serverLocal = new interfazServidorImpl();
        }
        catch (Exception e2) {
            String msj = "Ha ocurrido otro error";
            JOptionPane.showMessageDialog(this, msj, msj, JOptionPane.ERROR_MESSAGE);
        }
        try {
            conexion = new conexionRMIServidor();
        }
        catch (Exception e) {
            String msj = "Error al instanciar el objeto RMI";
            JOptionPane.showMessageDialog(this, msj, msj, JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btn_detener = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_puerto = new javax.swing.JTextField();
        btn_iniciar = new javax.swing.JButton();
        lb_estado = new javax.swing.JLabel();
        lb_numUsuarios = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Servidor RMI para chat");
        setMinimumSize(new java.awt.Dimension(360, 230));
        setPreferredSize(new java.awt.Dimension(370, 230));

        btn_detener.setText("Detener");
        btn_detener.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_detenerMouseClicked(evt);
            }
        });

        jLabel1.setText("Estado:");

        jLabel2.setText("Usuarios conectados:");

        jLabel3.setText("Puerto de escucha:");

        tf_puerto.setText("2000");

        btn_iniciar.setText("Iniciar");
        btn_iniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_iniciarMouseClicked(evt);
            }
        });

        lb_numUsuarios.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_iniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_detener, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_puerto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_estado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_numUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_estado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lb_numUsuarios))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_puerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_detener)
                    .addComponent(btn_iniciar))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Estado del servidor", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Estado");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_detenerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_detenerMouseClicked
        
        try {
            conexion.detener();
            this.btn_iniciar.setEnabled(true);
            this.btn_detener.setEnabled(false);
            this.lb_estado.setText(conexionRMIServidor.desconectado);
            
        } catch (RemoteException ex) {
            //loguear
            String msj = "Ha ocurrido otro error al detener el servidor RMI";
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, msj, msj, JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btn_detenerMouseClicked

    private void btn_iniciarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_iniciarMouseClicked
        Registry registro;
        try {
            int puerto;
            String puertoStr = this.tf_puerto.getText();
            puerto = Integer.parseInt(puertoStr);

            registro = conexion.getRegistry(puerto);
            //Se instancia el objeto que implementa la interfaz del Servidor
            //Ahora hay que hacerlo remoto, para ello se registra en el Registry
            //con el m√©todo "rebind" que lo registra con un nombre para poder ser visto en ese espacio
            //en este caso se le dio el nombre "Implementacion".
            interfazServidorImpl objeto = new interfazServidorImpl();
            registro.rebind("Implementacion", objeto);
            this.btn_iniciar.setEnabled(false);
            this.btn_detener.setEnabled(true);
            this.lb_estado.setText(conexionRMIServidor.conectado);
	    
            
        } catch (RemoteException ex) {
            
            String msj = "Excepci√≥n remota";
            JOptionPane.showMessageDialog(this, ex.getMessage(), msj, JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException nfe) {
            String msj = "Error en el puerto";
            JOptionPane.showMessageDialog(this, msj, msj, JOptionPane.ERROR_MESSAGE);
        } catch (Exception e2) {
            String msj = "Ha ocurrido otro error";
            e2.printStackTrace();
            JOptionPane.showMessageDialog(this, msj, msj, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_iniciarMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_detener;
    private javax.swing.JButton btn_iniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lb_estado;
    private javax.swing.JLabel lb_numUsuarios;
    private javax.swing.JTextField tf_puerto;
    // End of variables declaration//GEN-END:variables
}
